<Type Name="IActionHandler&lt;TState&gt;" FullName="Microsoft.Teams.AI.AI.Action.IActionHandler&lt;TState&gt;">
  <TypeSignature Language="C#" Value="public interface IActionHandler&lt;TState&gt; where TState : ITurnState&lt;StateBase,StateBase,TempState&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActionHandler`1&lt;(class Microsoft.Teams.AI.State.ITurnState`3&lt;class Microsoft.Teams.AI.State.StateBase, class Microsoft.Teams.AI.State.StateBase, class Microsoft.Teams.AI.State.TempState&gt;) TState&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.AI.Action.IActionHandler`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActionHandler(Of TState)" />
  <TypeSignature Language="F#" Value="type IActionHandler&lt;'State (requires 'State :&gt; ITurnState&lt;StateBase, StateBase, TempState&gt;)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState">
      <Constraints>
        <InterfaceName>Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TState">Type of the turn state.</typeparam>
    <summary>
            Handler to perform the action.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="PerformAction">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; PerformAction (Microsoft.Bot.Builder.ITurnContext turnContext, TState turnState, object? entities = default, string? action = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; PerformAction(class Microsoft.Bot.Builder.ITurnContext turnContext, !TState turnState, object entities, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.AI.Action.IActionHandler`1.PerformAction(Microsoft.Bot.Builder.ITurnContext,`0,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function PerformAction (turnContext As ITurnContext, turnState As TState, Optional entities As Object = Nothing, Optional action As String = Nothing) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member PerformAction : Microsoft.Bot.Builder.ITurnContext * 'State * obj * string -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iActionHandler.PerformAction (turnContext, turnState, entities, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="entities" Type="System.Object" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="turnContext">Current turn context.</param>
        <param name="turnState">Current turn state.</param>
        <param name="entities">Optional enti to be used to perform the action.</param>
        <param name="action">The actual action name.</param>
        <summary>
            Perform the action.
            </summary>
        <returns>True if continue executing, otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
