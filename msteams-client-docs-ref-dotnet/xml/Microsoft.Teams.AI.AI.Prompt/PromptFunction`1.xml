<Type Name="PromptFunction&lt;TState&gt;" FullName="Microsoft.Teams.AI.AI.Prompt.PromptFunction&lt;TState&gt;">
  <TypeSignature Language="C#" Value="public delegate System.Threading.Tasks.Task&lt;string&gt; PromptFunction&lt;TState&gt;(ITurnContext turnContext, TState turnState) where TState : ITurnState&lt;StateBase,StateBase,TempState&gt;;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PromptFunction`1&lt;(class Microsoft.Teams.AI.State.ITurnState`3&lt;class Microsoft.Teams.AI.State.StateBase, class Microsoft.Teams.AI.State.StateBase, class Microsoft.Teams.AI.State.TempState&gt;) TState&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.AI.Prompt.PromptFunction`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function PromptFunction(Of TState)(turnContext As ITurnContext, turnState As TState) As Task(Of String) " />
  <TypeSignature Language="F#" Value="type PromptFunction&lt;'State (requires 'State :&gt; ITurnState&lt;StateBase, StateBase, TempState&gt;)&gt; = delegate of ITurnContext * 'State -&gt; Task&lt;string&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState">
      <Constraints>
        <InterfaceName>Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
    <Parameter Name="turnState" Type="TState" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TState">The turn state class.</typeparam>
    <param name="turnContext">The turn context.</param>
    <param name="turnState">The turn state.</param>
    <summary>
            The prompt function delegate.
            </summary>
    <returns>A string that is injected in the prompt template.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
