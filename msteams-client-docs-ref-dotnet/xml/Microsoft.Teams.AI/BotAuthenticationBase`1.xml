<Type Name="BotAuthenticationBase&lt;TState&gt;" FullName="Microsoft.Teams.AI.BotAuthenticationBase&lt;TState&gt;">
  <TypeSignature Language="C#" Value="public abstract class BotAuthenticationBase&lt;TState&gt; where TState : TurnState, new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BotAuthenticationBase`1&lt;.ctor (class Microsoft.Teams.AI.State.TurnState) TState&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.BotAuthenticationBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BotAuthenticationBase(Of TState)" />
  <TypeSignature Language="F#" Value="type BotAuthenticationBase&lt;'State (requires 'State :&gt; TurnState and 'State : (new : unit -&gt; 'State))&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.Teams.AI.State.TurnState</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TState">To be added.</typeparam>
    <summary>
            Base class for bot authentication that handles common logic
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotAuthenticationBase (Microsoft.Teams.AI.Application&lt;TState&gt; app, string name, Microsoft.Bot.Builder.IStorage? storage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Teams.AI.Application`1&lt;!TState&gt; app, string name, class Microsoft.Bot.Builder.IStorage storage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.BotAuthenticationBase`1.#ctor(Microsoft.Teams.AI.Application{`0},System.String,Microsoft.Bot.Builder.IStorage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (app As Application(Of TState), name As String, Optional storage As IStorage = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Teams.AI.BotAuthenticationBase&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; : Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; * string * Microsoft.Bot.Builder.IStorage -&gt; Microsoft.Teams.AI.BotAuthenticationBase&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="new Microsoft.Teams.AI.BotAuthenticationBase&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; (app, name, storage)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="app" Type="Microsoft.Teams.AI.Application&lt;TState&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="storage" Type="Microsoft.Bot.Builder.IStorage" />
      </Parameters>
      <Docs>
        <param name="app">The application instance</param>
        <param name="name">The name of authentication handler</param>
        <param name="storage">The storage to save turn state</param>
        <summary>
            Initializes the class
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_name">
      <MemberSignature Language="C#" Value="protected string _name;" />
      <MemberSignature Language="ILAsm" Value=".field family string _name" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Teams.AI.BotAuthenticationBase`1._name" />
      <MemberSignature Language="VB.NET" Value="Protected _name As String " />
      <MemberSignature Language="F#" Value="val mutable _name : string" Usage="Microsoft.Teams.AI.BotAuthenticationBase&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;._name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Name of the authentication handler
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_storage">
      <MemberSignature Language="C#" Value="protected Microsoft.Bot.Builder.IStorage _storage;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.Bot.Builder.IStorage _storage" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Teams.AI.BotAuthenticationBase`1._storage" />
      <MemberSignature Language="VB.NET" Value="Protected _storage As IStorage " />
      <MemberSignature Language="F#" Value="val mutable _storage : Microsoft.Bot.Builder.IStorage" Usage="Microsoft.Teams.AI.BotAuthenticationBase&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;._storage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.IStorage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Storage to save turn state
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_userSignInFailureHandler">
      <MemberSignature Language="C#" Value="protected Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,Microsoft.Teams.AI.Exceptions.TeamsAIAuthException,System.Threading.Tasks.Task&gt;? _userSignInFailureHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Func`4&lt;class Microsoft.Bot.Builder.ITurnContext, !TState, class Microsoft.Teams.AI.Exceptions.TeamsAIAuthException, class System.Threading.Tasks.Task&gt; _userSignInFailureHandler" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Teams.AI.BotAuthenticationBase`1._userSignInFailureHandler" />
      <MemberSignature Language="VB.NET" Value="Protected _userSignInFailureHandler As Func(Of ITurnContext, TState, TeamsAIAuthException, Task) " />
      <MemberSignature Language="F#" Value="val mutable _userSignInFailureHandler : Func&lt;Microsoft.Bot.Builder.ITurnContext, 'State, Microsoft.Teams.AI.Exceptions.TeamsAIAuthException, System.Threading.Tasks.Task (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="Microsoft.Teams.AI.BotAuthenticationBase&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;._userSignInFailureHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,Microsoft.Teams.AI.Exceptions.TeamsAIAuthException,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Callback when user sign in fail
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_userSignInSuccessHandler">
      <MemberSignature Language="C#" Value="protected Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,System.Threading.Tasks.Task&gt;? _userSignInSuccessHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Func`3&lt;class Microsoft.Bot.Builder.ITurnContext, !TState, class System.Threading.Tasks.Task&gt; _userSignInSuccessHandler" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Teams.AI.BotAuthenticationBase`1._userSignInSuccessHandler" />
      <MemberSignature Language="VB.NET" Value="Protected _userSignInSuccessHandler As Func(Of ITurnContext, TState, Task) " />
      <MemberSignature Language="F#" Value="val mutable _userSignInSuccessHandler : Func&lt;Microsoft.Bot.Builder.ITurnContext, 'State, System.Threading.Tasks.Task (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="Microsoft.Teams.AI.BotAuthenticationBase&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;._userSignInSuccessHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,System.Threading.Tasks.Task&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Callback when user sign in success
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.SignInResponse&gt; AuthenticateAsync (Microsoft.Bot.Builder.ITurnContext context, TState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Teams.AI.SignInResponse&gt; AuthenticateAsync(class Microsoft.Bot.Builder.ITurnContext context, !TState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.BotAuthenticationBase`1.AuthenticateAsync(Microsoft.Bot.Builder.ITurnContext,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AuthenticateAsync (context As ITurnContext, state As TState) As Task(Of SignInResponse)" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsync : Microsoft.Bot.Builder.ITurnContext * 'State -&gt; System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.SignInResponse&gt;" Usage="botAuthenticationBase.AuthenticateAsync (context, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.SignInResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="state" Type="TState" />
      </Parameters>
      <Docs>
        <param name="context">The turn context</param>
        <param name="state">The turn state</param>
        <summary>
            Authenticate current user
            </summary>
        <returns>The sign in response</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueDialog">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; ContinueDialog (Microsoft.Bot.Builder.ITurnContext context, TState state, string dialogStateProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; ContinueDialog(class Microsoft.Bot.Builder.ITurnContext context, !TState state, string dialogStateProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.BotAuthenticationBase`1.ContinueDialog(Microsoft.Bot.Builder.ITurnContext,`0,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ContinueDialog (context As ITurnContext, state As TState, dialogStateProperty As String) As Task(Of DialogTurnResult)" />
      <MemberSignature Language="F#" Value="abstract member ContinueDialog : Microsoft.Bot.Builder.ITurnContext * 'State * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;" Usage="botAuthenticationBase.ContinueDialog (context, state, dialogStateProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="dialogStateProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">The turn context</param>
        <param name="state">The turn state</param>
        <param name="dialogStateProperty">The property name for storing dialog state.</param>
        <summary>
            Continue the authentication dialog.
            </summary>
        <returns>Dialog turn result that contains token if sign in success</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleSignInActivity">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task HandleSignInActivity (Microsoft.Bot.Builder.ITurnContext context, TState state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task HandleSignInActivity(class Microsoft.Bot.Builder.ITurnContext context, !TState state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.BotAuthenticationBase`1.HandleSignInActivity(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleSignInActivity (context As ITurnContext, state As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="member this.HandleSignInActivity : Microsoft.Bot.Builder.ITurnContext * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="botAuthenticationBase.HandleSignInActivity (context, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">The turn context</param>
        <param name="state">The turn state</param>
        <param name="cancellationToken">The cancellation token</param>
        <summary>
            Handles the signin/verifyState activity. The onUserSignInSuccess and onUserSignInFailure handlers will be called based on the result.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidActivity">
      <MemberSignature Language="C#" Value="public virtual bool IsValidActivity (Microsoft.Bot.Builder.ITurnContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidActivity(class Microsoft.Bot.Builder.ITurnContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.BotAuthenticationBase`1.IsValidActivity(Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidActivity (context As ITurnContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsValidActivity : Microsoft.Bot.Builder.ITurnContext -&gt; bool&#xA;override this.IsValidActivity : Microsoft.Bot.Builder.ITurnContext -&gt; bool" Usage="botAuthenticationBase.IsValidActivity context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="context">The turn context</param>
        <summary>
            Whether the current activity is a valid activity that supports authentication
            </summary>
        <returns>True if valid. Otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUserSignInFailure">
      <MemberSignature Language="C#" Value="public void OnUserSignInFailure (Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,Microsoft.Teams.AI.Exceptions.TeamsAIAuthException,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnUserSignInFailure(class System.Func`4&lt;class Microsoft.Bot.Builder.ITurnContext, !TState, class Microsoft.Teams.AI.Exceptions.TeamsAIAuthException, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.BotAuthenticationBase`1.OnUserSignInFailure(System.Func{Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.Exceptions.TeamsAIAuthException,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnUserSignInFailure (handler As Func(Of ITurnContext, TState, TeamsAIAuthException, Task))" />
      <MemberSignature Language="F#" Value="member this.OnUserSignInFailure : Func&lt;Microsoft.Bot.Builder.ITurnContext, 'State, Microsoft.Teams.AI.Exceptions.TeamsAIAuthException, System.Threading.Tasks.Task (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; unit" Usage="botAuthenticationBase.OnUserSignInFailure handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,Microsoft.Teams.AI.Exceptions.TeamsAIAuthException,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">The handler function to call when the user failed to signed in</param>
        <summary>
            The handler function is called when the user sign in flow fails
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUserSignInSuccess">
      <MemberSignature Language="C#" Value="public void OnUserSignInSuccess (Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnUserSignInSuccess(class System.Func`3&lt;class Microsoft.Bot.Builder.ITurnContext, !TState, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.BotAuthenticationBase`1.OnUserSignInSuccess(System.Func{Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnUserSignInSuccess (handler As Func(Of ITurnContext, TState, Task))" />
      <MemberSignature Language="F#" Value="member this.OnUserSignInSuccess : Func&lt;Microsoft.Bot.Builder.ITurnContext, 'State, System.Threading.Tasks.Task (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; unit" Usage="botAuthenticationBase.OnUserSignInSuccess handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">The handler function to call when the user has successfully signed in</param>
        <summary>
            The handler function is called when the user has successfully signed in
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; RunDialog (Microsoft.Bot.Builder.ITurnContext context, TState state, string dialogStateProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt; RunDialog(class Microsoft.Bot.Builder.ITurnContext context, !TState state, string dialogStateProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.BotAuthenticationBase`1.RunDialog(Microsoft.Bot.Builder.ITurnContext,`0,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RunDialog (context As ITurnContext, state As TState, dialogStateProperty As String) As Task(Of DialogTurnResult)" />
      <MemberSignature Language="F#" Value="abstract member RunDialog : Microsoft.Bot.Builder.ITurnContext * 'State * string -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;" Usage="botAuthenticationBase.RunDialog (context, state, dialogStateProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.Dialogs.DialogTurnResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="dialogStateProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">The turn context</param>
        <param name="state">The turn state</param>
        <param name="dialogStateProperty">The property name for storing dialog state.</param>
        <summary>
            Run or continue the authentication dialog.
            </summary>
        <returns>Dialog turn result that contains token if sign in success</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenExchangeRouteSelector">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;bool&gt; TokenExchangeRouteSelector (Microsoft.Bot.Builder.ITurnContext context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TokenExchangeRouteSelector(class Microsoft.Bot.Builder.ITurnContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.BotAuthenticationBase`1.TokenExchangeRouteSelector(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TokenExchangeRouteSelector (context As ITurnContext, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TokenExchangeRouteSelector : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.TokenExchangeRouteSelector : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="botAuthenticationBase.TokenExchangeRouteSelector (context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">The turn context</param>
        <param name="cancellationToken">The cancellation token</param>
        <summary>
            The route selector for signin/tokenExchange activity
            </summary>
        <returns>True if the activity should be handled by current authentication hanlder. Otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyStateRouteSelector">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;bool&gt; VerifyStateRouteSelector (Microsoft.Bot.Builder.ITurnContext context, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; VerifyStateRouteSelector(class Microsoft.Bot.Builder.ITurnContext context, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.BotAuthenticationBase`1.VerifyStateRouteSelector(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VerifyStateRouteSelector (context As ITurnContext, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member VerifyStateRouteSelector : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.VerifyStateRouteSelector : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="botAuthenticationBase.VerifyStateRouteSelector (context, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">The turn context</param>
        <param name="cancellationToken">The cancellation token</param>
        <summary>
            The route selector for signin/verifyState activity
            </summary>
        <returns>True if the activity should be handled by current authentication hanlder. Otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
