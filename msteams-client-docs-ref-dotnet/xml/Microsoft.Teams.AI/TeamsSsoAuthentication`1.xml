<Type Name="TeamsSsoAuthentication&lt;TState&gt;" FullName="Microsoft.Teams.AI.TeamsSsoAuthentication&lt;TState&gt;">
  <TypeSignature Language="C#" Value="public class TeamsSsoAuthentication&lt;TState&gt; : Microsoft.Teams.AI.IAuthentication&lt;TState&gt; where TState : TurnState, new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TeamsSsoAuthentication`1&lt;.ctor (class Microsoft.Teams.AI.State.TurnState) TState&gt; extends System.Object implements class Microsoft.Teams.AI.IAuthentication`1&lt;!TState&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.TeamsSsoAuthentication`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TeamsSsoAuthentication(Of TState)&#xA;Implements IAuthentication(Of TState)" />
  <TypeSignature Language="F#" Value="type TeamsSsoAuthentication&lt;'State (requires 'State :&gt; TurnState and 'State : (new : unit -&gt; 'State))&gt; = class&#xA;    interface IAuthentication&lt;'State (requires 'State :&gt; TurnState and 'State : (new : unit -&gt; 'State))&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.Teams.AI.State.TurnState</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Teams.AI.IAuthentication&lt;TState&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TState">To be added.</typeparam>
    <summary>
            Handles authentication based on Teams SSO.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TeamsSsoAuthentication (Microsoft.Teams.AI.TeamsSsoSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Teams.AI.TeamsSsoSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.TeamsSsoAuthentication`1.#ctor(Microsoft.Teams.AI.TeamsSsoSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As TeamsSsoSettings)" />
      <MemberSignature Language="F#" Value="new Microsoft.Teams.AI.TeamsSsoAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; : Microsoft.Teams.AI.TeamsSsoSettings -&gt; Microsoft.Teams.AI.TeamsSsoAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="new Microsoft.Teams.AI.TeamsSsoAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Teams.AI.TeamsSsoSettings" />
      </Parameters>
      <Docs>
        <param name="settings">The settings to initialize the class</param>
        <summary>
            Initialize instance for current class
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Teams.AI.Application&lt;TState&gt; app, string name, Microsoft.Bot.Builder.IStorage? storage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Teams.AI.Application`1&lt;!TState&gt; app, string name, class Microsoft.Bot.Builder.IStorage storage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.TeamsSsoAuthentication`1.Initialize(Microsoft.Teams.AI.Application{`0},System.String,Microsoft.Bot.Builder.IStorage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (app As Application(Of TState), name As String, Optional storage As IStorage = Nothing)" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; * string * Microsoft.Bot.Builder.IStorage -&gt; unit&#xA;override this.Initialize : Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; * string * Microsoft.Bot.Builder.IStorage -&gt; unit" Usage="teamsSsoAuthentication.Initialize (app, name, storage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.IAuthentication`1.Initialize(Microsoft.Teams.AI.Application{`0},System.String,Microsoft.Bot.Builder.IStorage)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="Microsoft.Teams.AI.Application&lt;TState&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="storage" Type="Microsoft.Bot.Builder.IStorage" />
      </Parameters>
      <Docs>
        <param name="app">The application object</param>
        <param name="name">The name of the authentication handler</param>
        <param name="storage">The storage to save turn state</param>
        <summary>
            Initialize the authentication class
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidActivity">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; IsValidActivity (Microsoft.Bot.Builder.ITurnContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsValidActivity(class Microsoft.Bot.Builder.ITurnContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.TeamsSsoAuthentication`1.IsValidActivity(Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidActivity (context As ITurnContext) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member IsValidActivity : Microsoft.Bot.Builder.ITurnContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.IsValidActivity : Microsoft.Bot.Builder.ITurnContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="teamsSsoAuthentication.IsValidActivity context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.IAuthentication`1.IsValidActivity(Microsoft.Bot.Builder.ITurnContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="context">The turn context</param>
        <summary>
            Whether the current activity is a valid activity that supports authentication
            </summary>
        <returns>True if valid. Otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUserSignInFailure">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.IAuthentication&lt;TState&gt; OnUserSignInFailure (Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,Microsoft.Teams.AI.Exceptions.TeamsAIAuthException,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Teams.AI.IAuthentication`1&lt;!TState&gt; OnUserSignInFailure(class System.Func`4&lt;class Microsoft.Bot.Builder.ITurnContext, !TState, class Microsoft.Teams.AI.Exceptions.TeamsAIAuthException, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.TeamsSsoAuthentication`1.OnUserSignInFailure(System.Func{Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.Exceptions.TeamsAIAuthException,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnUserSignInFailure (handler As Func(Of ITurnContext, TState, TeamsAIAuthException, Task)) As IAuthentication(Of TState)" />
      <MemberSignature Language="F#" Value="abstract member OnUserSignInFailure : Func&lt;Microsoft.Bot.Builder.ITurnContext, 'State, Microsoft.Teams.AI.Exceptions.TeamsAIAuthException, System.Threading.Tasks.Task (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.IAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;&#xA;override this.OnUserSignInFailure : Func&lt;Microsoft.Bot.Builder.ITurnContext, 'State, Microsoft.Teams.AI.Exceptions.TeamsAIAuthException, System.Threading.Tasks.Task (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.IAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="teamsSsoAuthentication.OnUserSignInFailure handler" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.IAuthentication`1.OnUserSignInFailure(System.Func{Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.Exceptions.TeamsAIAuthException,System.Threading.Tasks.Task})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.IAuthentication&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,Microsoft.Teams.AI.Exceptions.TeamsAIAuthException,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">The handler function to call when the user failed to signed in</param>
        <summary>
            The handler function is called when the user sign in flow fails
            </summary>
        <returns>The class itself for chaining purpose</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUserSignInSuccess">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.IAuthentication&lt;TState&gt; OnUserSignInSuccess (Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Teams.AI.IAuthentication`1&lt;!TState&gt; OnUserSignInSuccess(class System.Func`3&lt;class Microsoft.Bot.Builder.ITurnContext, !TState, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.TeamsSsoAuthentication`1.OnUserSignInSuccess(System.Func{Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnUserSignInSuccess (handler As Func(Of ITurnContext, TState, Task)) As IAuthentication(Of TState)" />
      <MemberSignature Language="F#" Value="abstract member OnUserSignInSuccess : Func&lt;Microsoft.Bot.Builder.ITurnContext, 'State, System.Threading.Tasks.Task (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.IAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;&#xA;override this.OnUserSignInSuccess : Func&lt;Microsoft.Bot.Builder.ITurnContext, 'State, System.Threading.Tasks.Task (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.IAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="teamsSsoAuthentication.OnUserSignInSuccess handler" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.IAuthentication`1.OnUserSignInSuccess(System.Func{Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.Tasks.Task})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.IAuthentication&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">The handler function to call when the user has successfully signed in</param>
        <summary>
            The handler function is called when the user has successfully signed in
            </summary>
        <returns>The class itself for chaining purpose</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.SignInResponse&gt; SignInUser (Microsoft.Bot.Builder.ITurnContext context, TState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Teams.AI.SignInResponse&gt; SignInUser(class Microsoft.Bot.Builder.ITurnContext context, !TState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.TeamsSsoAuthentication`1.SignInUser(Microsoft.Bot.Builder.ITurnContext,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignInUser (context As ITurnContext, state As TState) As Task(Of SignInResponse)" />
      <MemberSignature Language="F#" Value="abstract member SignInUser : Microsoft.Bot.Builder.ITurnContext * 'State -&gt; System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.SignInResponse&gt;&#xA;override this.SignInUser : Microsoft.Bot.Builder.ITurnContext * 'State -&gt; System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.SignInResponse&gt;" Usage="teamsSsoAuthentication.SignInUser (context, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.IAuthentication`1.SignInUser(Microsoft.Bot.Builder.ITurnContext,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.SignInResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="state" Type="TState" />
      </Parameters>
      <Docs>
        <param name="context">The turn context</param>
        <param name="state">The turn state</param>
        <summary>
            Sign in current user
            </summary>
        <returns>The sign in response</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SignOutUser (Microsoft.Bot.Builder.ITurnContext context, TState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SignOutUser(class Microsoft.Bot.Builder.ITurnContext context, !TState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.TeamsSsoAuthentication`1.SignOutUser(Microsoft.Bot.Builder.ITurnContext,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignOutUser (context As ITurnContext, state As TState) As Task" />
      <MemberSignature Language="F#" Value="abstract member SignOutUser : Microsoft.Bot.Builder.ITurnContext * 'State -&gt; System.Threading.Tasks.Task&#xA;override this.SignOutUser : Microsoft.Bot.Builder.ITurnContext * 'State -&gt; System.Threading.Tasks.Task" Usage="teamsSsoAuthentication.SignOutUser (context, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.IAuthentication`1.SignOutUser(Microsoft.Bot.Builder.ITurnContext,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="state" Type="TState" />
      </Parameters>
      <Docs>
        <param name="context">The turn context</param>
        <param name="state">The turn state</param>
        <summary>
            Sign out current user
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
