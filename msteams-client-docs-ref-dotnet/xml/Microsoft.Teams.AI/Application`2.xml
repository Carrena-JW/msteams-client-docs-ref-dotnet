<Type Name="Application&lt;TState,TTurnStateManager&gt;" FullName="Microsoft.Teams.AI.Application&lt;TState,TTurnStateManager&gt;">
  <TypeSignature Language="C#" Value="public class Application&lt;TState,TTurnStateManager&gt; : Microsoft.Bot.Builder.IBot where TState : ITurnState&lt;StateBase,StateBase,TempState&gt; where TTurnStateManager : ITurnStateManager&lt;TState&gt;, new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Application`2&lt;(class Microsoft.Teams.AI.State.ITurnState`3&lt;class Microsoft.Teams.AI.State.StateBase, class Microsoft.Teams.AI.State.StateBase, class Microsoft.Teams.AI.State.TempState&gt;) TState, .ctor (class Microsoft.Teams.AI.State.ITurnStateManager`1&lt;!TState&gt;) TTurnStateManager&gt; extends System.Object implements class Microsoft.Bot.Builder.IBot" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.Application`2" />
  <TypeSignature Language="VB.NET" Value="Public Class Application(Of TState, TTurnStateManager)&#xA;Implements IBot" />
  <TypeSignature Language="F#" Value="type Application&lt;'State, 'urnStateManager (requires 'State :&gt; ITurnState&lt;StateBase, StateBase, TempState&gt; and 'urnStateManager :&gt; ITurnStateManager&lt;'State&gt; and 'urnStateManager : (new : unit -&gt; 'urnStateManager))&gt; = class&#xA;    interface IBot" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState">
      <Constraints>
        <InterfaceName>Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TTurnStateManager">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <InterfaceName>Microsoft.Teams.AI.State.ITurnStateManager&lt;TState&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.IBot</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TState">Type of the turn state. This allows for strongly typed access to the turn state.</typeparam>
    <typeparam name="TTurnStateManager">Type of the turn state manager.</typeparam>
    <summary>
             Application class for routing and processing incoming requests.
             </summary>
    <remarks>
             The Application object replaces the traditional ActivityHandler that a bot would use. It supports
             a simpler fluent style of authoring bots versus the inheritance based approach used by the
             ActivityHandler class.
            
             Additionally, it has built-in support for calling into the SDK's AI system and can be used to create
             bots that leverage Large Language Models (LLM) and other AI capabilities.
             </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Application (Microsoft.Teams.AI.ApplicationOptions&lt;TState,TTurnStateManager&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Teams.AI.ApplicationOptions`2&lt;!TState, !TTurnStateManager&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.#ctor(Microsoft.Teams.AI.ApplicationOptions{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As ApplicationOptions(Of TState, TTurnStateManager))" />
      <MemberSignature Language="F#" Value="new Microsoft.Teams.AI.Application&lt;'State, 'urnStateManager (requires 'State :&gt; Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.TempState&gt; and 'urnStateManager :&gt; Microsoft.Teams.AI.State.ITurnStateManager&lt;'State&gt; and 'urnStateManager : (new : unit -&gt; 'urnStateManager))&gt; : Microsoft.Teams.AI.ApplicationOptions&lt;'State, 'urnStateManager (requires 'State :&gt; Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.TempState&gt; and 'urnStateManager :&gt; Microsoft.Teams.AI.State.ITurnStateManager&lt;'State&gt; and 'urnStateManager : (new : unit -&gt; 'urnStateManager))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State, 'urnStateManager (requires 'State :&gt; Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.TempState&gt; and 'urnStateManager :&gt; Microsoft.Teams.AI.State.ITurnStateManager&lt;'State&gt; and 'urnStateManager : (new : unit -&gt; 'urnStateManager))&gt;" Usage="new Microsoft.Teams.AI.Application&lt;'State, 'urnStateManager (requires 'State :&gt; Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.TempState&gt; and 'urnStateManager :&gt; Microsoft.Teams.AI.State.ITurnStateManager&lt;'State&gt; and 'urnStateManager : (new : unit -&gt; 'urnStateManager))&gt; options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Teams.AI.ApplicationOptions&lt;TState,TTurnStateManager&gt;" />
      </Parameters>
      <Docs>
        <param name="options">Optional. Options used to configure the application.</param>
        <summary>
            Creates a new Application instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AI">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.AI.AI&lt;TState&gt; AI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.AI.AI`1&lt;!TState&gt; AI" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.Application`2.AI" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AI As AI(Of TState)" />
      <MemberSignature Language="F#" Value="member this.AI : Microsoft.Teams.AI.AI.AI&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.TempState&gt;)&gt;" Usage="Microsoft.Teams.AI.Application&lt;'State, 'urnStateManager (requires 'State :&gt; Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.TempState&gt; and 'urnStateManager :&gt; Microsoft.Teams.AI.State.ITurnStateManager&lt;'State&gt; and 'urnStateManager : (new : unit -&gt; 'urnStateManager))&gt;.AI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.AI.AI&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Fluent interface for accessing AI specific features.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property is only available if the Application was configured with 'ai' options. An
            exception will be thrown if you attempt to access it otherwise.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInvokeResponse">
      <MemberSignature Language="C#" Value="protected static Microsoft.Bot.Builder.InvokeResponse CreateInvokeResponse (object? body);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class Microsoft.Bot.Builder.InvokeResponse CreateInvokeResponse(object body) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.CreateInvokeResponse(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateInvokeResponse (body As Object) As InvokeResponse" />
      <MemberSignature Language="F#" Value="static member CreateInvokeResponse : obj -&gt; Microsoft.Bot.Builder.InvokeResponse" Usage="Microsoft.Teams.AI.Application&lt;'State, 'urnStateManager (requires 'State :&gt; Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.TempState&gt; and 'urnStateManager :&gt; Microsoft.Teams.AI.State.ITurnStateManager&lt;'State&gt; and 'urnStateManager : (new : unit -&gt; 'urnStateManager))&gt;.CreateInvokeResponse body" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.InvokeResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="body">JSON serialized content from a POST response.</param>
        <summary>
            An <see cref="T:Microsoft.Bot.Builder.InvokeResponse" /> factory that initializes the body to the parameter passed and status equal to OK.
            </summary>
        <returns>A new <see cref="T:Microsoft.Bot.Builder.InvokeResponse" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAdaptiveCardActionExecuteAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.AdaptiveCardInvokeResponse&gt; OnAdaptiveCardActionExecuteAsync (Microsoft.Bot.Schema.AdaptiveCardInvokeValue invokeValue, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.AdaptiveCardInvokeResponse&gt; OnAdaptiveCardActionExecuteAsync(class Microsoft.Bot.Schema.AdaptiveCardInvokeValue invokeValue, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnAdaptiveCardActionExecuteAsync(Microsoft.Bot.Schema.AdaptiveCardInvokeValue,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAdaptiveCardActionExecuteAsync (invokeValue As AdaptiveCardInvokeValue, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of AdaptiveCardInvokeResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnAdaptiveCardActionExecuteAsync : Microsoft.Bot.Schema.AdaptiveCardInvokeValue * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.AdaptiveCardInvokeResponse&gt;&#xA;override this.OnAdaptiveCardActionExecuteAsync : Microsoft.Bot.Schema.AdaptiveCardInvokeValue * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.AdaptiveCardInvokeResponse&gt;" Usage="application.OnAdaptiveCardActionExecuteAsync (invokeValue, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.AdaptiveCardInvokeResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeValue" Type="Microsoft.Bot.Schema.AdaptiveCardInvokeValue" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="invokeValue">A strongly-typed object from the incoming activity's Value.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when the bot is sent an Adaptive Card Action Execute.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
            method receives an Invoke with a <see cref="P:Microsoft.Bot.Schema.IInvokeActivity.Name" /> of `adaptiveCard/action`,
            it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterTurnAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;bool&gt; OnAfterTurnAsync (Microsoft.Bot.Builder.ITurnContext turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; OnAfterTurnAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnAfterTurnAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAfterTurnAsync (turnContext As ITurnContext, turnState As TState, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnAfterTurnAsync : Microsoft.Bot.Builder.ITurnContext * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.OnAfterTurnAsync : Microsoft.Bot.Builder.ITurnContext * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="application.OnAfterTurnAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Handler that will execute after the turn's activity handler logic is processed.
            </summary>
        <returns>True to continue execution of the current turn. Otherwise, return False.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAnonymousAppBasedLinkQueryAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt; OnAnonymousAppBasedLinkQueryAsync (Microsoft.Bot.Schema.Teams.AppBasedLinkQuery query, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt; OnAnonymousAppBasedLinkQueryAsync(class Microsoft.Bot.Schema.Teams.AppBasedLinkQuery query, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnAnonymousAppBasedLinkQueryAsync(Microsoft.Bot.Schema.Teams.AppBasedLinkQuery,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAnonymousAppBasedLinkQueryAsync (query As AppBasedLinkQuery, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of MessagingExtensionResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnAnonymousAppBasedLinkQueryAsync : Microsoft.Bot.Schema.Teams.AppBasedLinkQuery * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;&#xA;override this.OnAnonymousAppBasedLinkQueryAsync : Microsoft.Bot.Schema.Teams.AppBasedLinkQuery * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;" Usage="application.OnAnonymousAppBasedLinkQueryAsync (query, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="Microsoft.Bot.Schema.Teams.AppBasedLinkQuery" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The invoke request body type for app-based link query.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when an anonymous app based link query activity is received from the connector.
            </summary>
        <returns>The Messaging Extension Response for the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppBasedLinkQueryAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt; OnAppBasedLinkQueryAsync (Microsoft.Bot.Schema.Teams.AppBasedLinkQuery query, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt; OnAppBasedLinkQueryAsync(class Microsoft.Bot.Schema.Teams.AppBasedLinkQuery query, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnAppBasedLinkQueryAsync(Microsoft.Bot.Schema.Teams.AppBasedLinkQuery,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAppBasedLinkQueryAsync (query As AppBasedLinkQuery, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of MessagingExtensionResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnAppBasedLinkQueryAsync : Microsoft.Bot.Schema.Teams.AppBasedLinkQuery * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;&#xA;override this.OnAppBasedLinkQueryAsync : Microsoft.Bot.Schema.Teams.AppBasedLinkQuery * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;" Usage="application.OnAppBasedLinkQueryAsync (query, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="Microsoft.Bot.Schema.Teams.AppBasedLinkQuery" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The invoke request body type for app-based link query.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when an app based link query activity is received from the connector.
            </summary>
        <returns>The Messaging Extension Response for the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeTurnAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;bool&gt; OnBeforeTurnAsync (Microsoft.Bot.Builder.ITurnContext turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; OnBeforeTurnAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnBeforeTurnAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBeforeTurnAsync (turnContext As ITurnContext, turnState As TState, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeTurnAsync : Microsoft.Bot.Builder.ITurnContext * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.OnBeforeTurnAsync : Microsoft.Bot.Builder.ITurnContext * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="application.OnBeforeTurnAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Handler that will execute before the turn's activity handler logic is processed.
            </summary>
        <returns>True to continue execution of the current turn. Otherwise, return False.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCardActionInvokeAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt; OnCardActionInvokeAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.InvokeResponse&gt; OnCardActionInvokeAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnCardActionInvokeAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCardActionInvokeAsync (turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of InvokeResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnCardActionInvokeAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;&#xA;override this.OnCardActionInvokeAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;" Usage="application.OnCardActionInvokeAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when an card action invoke activity is received from the connector.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChannelCreatedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnChannelCreatedAsync (Microsoft.Bot.Schema.Teams.ChannelInfo channelInfo, Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnChannelCreatedAsync(class Microsoft.Bot.Schema.Teams.ChannelInfo channelInfo, class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnChannelCreatedAsync(Microsoft.Bot.Schema.Teams.ChannelInfo,Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnChannelCreatedAsync (channelInfo As ChannelInfo, teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnChannelCreatedAsync : Microsoft.Bot.Schema.Teams.ChannelInfo * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnChannelCreatedAsync : Microsoft.Bot.Schema.Teams.ChannelInfo * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnChannelCreatedAsync (channelInfo, teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelInfo" Type="Microsoft.Bot.Schema.Teams.ChannelInfo" />
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="channelInfo">The channel info object which describes the channel.</param>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Channel Created event activity is received from the connector.
            Channel Created correspond to the user creating a new channel.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChannelDeletedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnChannelDeletedAsync (Microsoft.Bot.Schema.Teams.ChannelInfo channelInfo, Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnChannelDeletedAsync(class Microsoft.Bot.Schema.Teams.ChannelInfo channelInfo, class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnChannelDeletedAsync(Microsoft.Bot.Schema.Teams.ChannelInfo,Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnChannelDeletedAsync (channelInfo As ChannelInfo, teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnChannelDeletedAsync : Microsoft.Bot.Schema.Teams.ChannelInfo * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnChannelDeletedAsync : Microsoft.Bot.Schema.Teams.ChannelInfo * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnChannelDeletedAsync (channelInfo, teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelInfo" Type="Microsoft.Bot.Schema.Teams.ChannelInfo" />
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="channelInfo">The channel info object which describes the channel.</param>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Channel Deleted event activity is received from the connector.
            Channel Deleted correspond to the user deleting an existing channel.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChannelRenamedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnChannelRenamedAsync (Microsoft.Bot.Schema.Teams.ChannelInfo channelInfo, Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnChannelRenamedAsync(class Microsoft.Bot.Schema.Teams.ChannelInfo channelInfo, class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnChannelRenamedAsync(Microsoft.Bot.Schema.Teams.ChannelInfo,Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnChannelRenamedAsync (channelInfo As ChannelInfo, teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnChannelRenamedAsync : Microsoft.Bot.Schema.Teams.ChannelInfo * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnChannelRenamedAsync : Microsoft.Bot.Schema.Teams.ChannelInfo * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnChannelRenamedAsync (channelInfo, teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelInfo" Type="Microsoft.Bot.Schema.Teams.ChannelInfo" />
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="channelInfo">The channel info object which describes the channel.</param>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Channel Renamed event activity is received from the connector.
            Channel Renamed correspond to the user renaming an existing channel.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChannelRestoredAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnChannelRestoredAsync (Microsoft.Bot.Schema.Teams.ChannelInfo channelInfo, Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnChannelRestoredAsync(class Microsoft.Bot.Schema.Teams.ChannelInfo channelInfo, class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnChannelRestoredAsync(Microsoft.Bot.Schema.Teams.ChannelInfo,Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnChannelRestoredAsync (channelInfo As ChannelInfo, teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnChannelRestoredAsync : Microsoft.Bot.Schema.Teams.ChannelInfo * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnChannelRestoredAsync : Microsoft.Bot.Schema.Teams.ChannelInfo * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnChannelRestoredAsync (channelInfo, teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channelInfo" Type="Microsoft.Bot.Schema.Teams.ChannelInfo" />
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="channelInfo">The channel info object which describes the channel.</param>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Channel Restored event activity is received from the connector.
            Channel Restored correspond to the user restoring a previously deleted channel.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCommandActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnCommandActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnCommandActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.ICommandActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnCommandActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCommandActivityAsync (turnContext As ITurnContext(Of ICommandActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnCommandActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnCommandActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnCommandActivityAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when a command activity is received when the base behavior of
             <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" /> is used.
             Commands are requests to perform an action and receivers typically respond with
             one or more commandResult activities. Receivers are also expected to explicitly
             reject unsupported command activities.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
             method receives a command activity, it calls this method.
            
             In a derived class, override this method to add logic that applies to all comand activities.
             Add logic to apply before the specific command-handling logic before the call to the base class
             <see cref="M:Microsoft.Teams.AI.Application`2.OnCommandActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandActivity},`0,System.Threading.CancellationToken)" /> method.
             Add logic to apply after the specific command-handling logic after the call to the base class
             <see cref="M:Microsoft.Teams.AI.Application`2.OnCommandActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandActivity},`0,System.Threading.CancellationToken)" /> method.
            
             Command activities communicate programmatic information from a client or channel to a bot.
             The meaning of an command activity is defined by the <see cref="P:Microsoft.Bot.Schema.ICommandActivity.Name" /> property,
             which is meaningful within the scope of a channel.
             </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnCommandActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnCommandResultActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnCommandResultActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandResultActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnCommandResultActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.ICommandResultActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnCommandResultActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandResultActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCommandResultActivityAsync (turnContext As ITurnContext(Of ICommandResultActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnCommandResultActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandResultActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnCommandResultActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandResultActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnCommandResultActivityAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandResultActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when a CommandResult activity is received when the base behavior of
             <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" /> is used.
             CommandResult activities can be used to communicate the result of a command execution.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
             method receives a CommandResult activity, it calls this method.
            
             In a derived class, override this method to add logic that applies to all comand activities.
             Add logic to apply before the specific CommandResult-handling logic before the call to the base class
             <see cref="M:Microsoft.Teams.AI.Application`2.OnCommandResultActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandResultActivity},`0,System.Threading.CancellationToken)" /> method.
             Add logic to apply after the specific CommandResult-handling logic after the call to the base class
             <see cref="M:Microsoft.Teams.AI.Application`2.OnCommandResultActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandResultActivity},`0,System.Threading.CancellationToken)" /> method.
            
             CommandResult activities communicate programmatic information from a client or channel to a bot.
             The meaning of an CommandResult activity is defined by the <see cref="P:Microsoft.Bot.Schema.ICommandResultActivity.Name" /> property,
             which is meaningful within the scope of a channel.
             </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnCommandResultActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandResultActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnConversationUpdateActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnConversationUpdateActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnConversationUpdateActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnConversationUpdateActivityAsync (turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnConversationUpdateActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnConversationUpdateActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnConversationUpdateActivityAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when a conversation update activity is received from the channel when the base behavior of
             <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" /> is used.
             Conversation update activities are useful when it comes to responding to users being added to or removed from the conversation.
             For example, a bot could respond to a user being added by greeting the user.
             By default, this method will call <see cref="M:Microsoft.Teams.AI.Application`2.OnMembersAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
             if any users have been added or <see cref="M:Microsoft.Teams.AI.Application`2.OnMembersRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
             if any users have been removed. The method checks the member ID so that it only responds to updates regarding members other than the bot itself.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
             method receives a conversation update activity, it calls this method.
             If the conversation update activity indicates that members other than the bot joined the conversation, it calls
             <see cref="M:Microsoft.Teams.AI.Application`2.OnMembersAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />.
             If the conversation update activity indicates that members other than the bot left the conversation, it calls
             <see cref="M:Microsoft.Teams.AI.Application`2.OnMembersRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />.
            
             In a derived class, override this method to add logic that applies to all conversation update activities.
             Add logic to apply before the member added or removed logic before the call to the base class
             <see cref="M:Microsoft.Teams.AI.Application`2.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" /> method.
             Add logic to apply after the member added or removed logic after the call to the base class
             <see cref="M:Microsoft.Teams.AI.Application`2.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" /> method.
             </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnMembersAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnMembersRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnEndOfConversationActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnEndOfConversationActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEndOfConversationActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnEndOfConversationActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IEndOfConversationActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnEndOfConversationActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEndOfConversationActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnEndOfConversationActivityAsync (turnContext As ITurnContext(Of IEndOfConversationActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnEndOfConversationActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEndOfConversationActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnEndOfConversationActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEndOfConversationActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnEndOfConversationActivityAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEndOfConversationActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.EndOfConversation" /> activities, such as the conversational logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
            method receives a message activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnEventActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnEventActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnEventActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IEventActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnEventActivityAsync (turnContext As ITurnContext(Of IEventActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnEventActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnEventActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnEventActivityAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when an event activity is received from the connector when the base behavior of
             <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" /> is used.
             Event activities can be used to communicate many different things.
             By default, this method will call <see cref="M:Microsoft.Teams.AI.Application`2.OnTokenResponseEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" /> if the
             activity's name is <c>tokens/response</c> or <see cref="M:Microsoft.Teams.AI.Application`2.OnEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" /> otherwise.
             A <c>tokens/response</c> event can be triggered by an <see cref="T:Microsoft.Bot.Schema.OAuthCard" />.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
             method receives an event activity, it calls this method.
             If the event <see cref="P:Microsoft.Bot.Schema.IEventActivity.Name" /> is `tokens/response`, it calls
             <see cref="M:Microsoft.Teams.AI.Application`2.OnTokenResponseEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />;
             otherwise, it calls <see cref="M:Microsoft.Teams.AI.Application`2.OnEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />.
            
             In a derived class, override this method to add logic that applies to all event activities.
             Add logic to apply before the specific event-handling logic before the call to the base class
             <see cref="M:Microsoft.Teams.AI.Application`2.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" /> method.
             Add logic to apply after the specific event-handling logic after the call to the base class
             <see cref="M:Microsoft.Teams.AI.Application`2.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" /> method.
            
             Event activities communicate programmatic information from a client or channel to a bot.
             The meaning of an event activity is defined by the <see cref="P:Microsoft.Bot.Schema.IEventActivity.Name" /> property,
             which is meaningful within the scope of a channel.
             A `tokens/response` event can be triggered by an <see cref="T:Microsoft.Bot.Schema.OAuthCard" /> or an OAuth prompt.
             </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnTokenResponseEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnEventAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnEventAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnEventAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IEventActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnEventAsync (turnContext As ITurnContext(Of IEventActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnEventAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnEventAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnEventAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when an event other than <c>tokens/response</c> is received when the base behavior of
            <see cref="M:Microsoft.Teams.AI.Application`2.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" /> is used.
            This method could optionally be overridden if the bot is meant to handle miscellaneous events.
            By default, this method does nothing.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
            method receives an event with a <see cref="P:Microsoft.Bot.Schema.IEventActivity.Name" /> other than `tokens/response`,
            it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnTokenResponseEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnFileConsentAcceptAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnFileConsentAcceptAsync (Microsoft.Bot.Schema.Teams.FileConsentCardResponse fileConsentCardResponse, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnFileConsentAcceptAsync(class Microsoft.Bot.Schema.Teams.FileConsentCardResponse fileConsentCardResponse, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnFileConsentAcceptAsync(Microsoft.Bot.Schema.Teams.FileConsentCardResponse,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnFileConsentAcceptAsync (fileConsentCardResponse As FileConsentCardResponse, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnFileConsentAcceptAsync : Microsoft.Bot.Schema.Teams.FileConsentCardResponse * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnFileConsentAcceptAsync : Microsoft.Bot.Schema.Teams.FileConsentCardResponse * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnFileConsentAcceptAsync (fileConsentCardResponse, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileConsentCardResponse" Type="Microsoft.Bot.Schema.Teams.FileConsentCardResponse" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">To be added.</param>
        <param name="turnState">To be added.</param>
        <param name="fileConsentCardResponse">The response representing the value of the invoke activity sent when the user accepts
            <param name="turnContext">A strongly-typed context object for this turn.</param><param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            a file consent card.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a file consent card is accepted by the user.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFileConsentAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt; OnFileConsentAsync (Microsoft.Bot.Schema.Teams.FileConsentCardResponse fileConsentCardResponse, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.InvokeResponse&gt; OnFileConsentAsync(class Microsoft.Bot.Schema.Teams.FileConsentCardResponse fileConsentCardResponse, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnFileConsentAsync(Microsoft.Bot.Schema.Teams.FileConsentCardResponse,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnFileConsentAsync (fileConsentCardResponse As FileConsentCardResponse, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of InvokeResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnFileConsentAsync : Microsoft.Bot.Schema.Teams.FileConsentCardResponse * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;&#xA;override this.OnFileConsentAsync : Microsoft.Bot.Schema.Teams.FileConsentCardResponse * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;" Usage="application.OnFileConsentAsync (fileConsentCardResponse, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileConsentCardResponse" Type="Microsoft.Bot.Schema.Teams.FileConsentCardResponse" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">To be added.</param>
        <param name="turnState">To be added.</param>
        <param name="fileConsentCardResponse">The response representing the value of the invoke activity sent when the user acts on
            <param name="turnContext">A strongly-typed context object for this turn.</param><param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
            a file consent card.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a file consent card activity is received from the connector.
            </summary>
        <returns>An InvokeResponse depending on the action of the file consent card.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFileConsentDeclineAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnFileConsentDeclineAsync (Microsoft.Bot.Schema.Teams.FileConsentCardResponse fileConsentCardResponse, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnFileConsentDeclineAsync(class Microsoft.Bot.Schema.Teams.FileConsentCardResponse fileConsentCardResponse, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnFileConsentDeclineAsync(Microsoft.Bot.Schema.Teams.FileConsentCardResponse,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnFileConsentDeclineAsync (fileConsentCardResponse As FileConsentCardResponse, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnFileConsentDeclineAsync : Microsoft.Bot.Schema.Teams.FileConsentCardResponse * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnFileConsentDeclineAsync : Microsoft.Bot.Schema.Teams.FileConsentCardResponse * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnFileConsentDeclineAsync (fileConsentCardResponse, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileConsentCardResponse" Type="Microsoft.Bot.Schema.Teams.FileConsentCardResponse" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">To be added.</param>
        <param name="fileConsentCardResponse">The response representing the value of the invoke activity sent when the user declines
            <param name="turnContext">A strongly-typed context object for this turn.</param>
            a file consent card.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a file consent card is declined by the user.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInstallationUpdateActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnInstallationUpdateActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnInstallationUpdateActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnInstallationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInstallationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInstallationUpdateActivityAsync (turnContext As ITurnContext(Of IInstallationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnInstallationUpdateActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnInstallationUpdateActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnInstallationUpdateActivityAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.InstallationUpdate" /> activities.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
            method receives a installation update activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnInstallationUpdateAddAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnInstallationUpdateAddAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnInstallationUpdateAddAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnInstallationUpdateAddAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInstallationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInstallationUpdateAddAsync (turnContext As ITurnContext(Of IInstallationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnInstallationUpdateAddAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnInstallationUpdateAddAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnInstallationUpdateAddAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.InstallationUpdate" /> activities with 'action' set to 'add'.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
            method receives a installation update activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnInstallationUpdateRemoveAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnInstallationUpdateRemoveAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnInstallationUpdateRemoveAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnInstallationUpdateRemoveAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInstallationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInstallationUpdateRemoveAsync (turnContext As ITurnContext(Of IInstallationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnInstallationUpdateRemoveAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnInstallationUpdateRemoveAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnInstallationUpdateRemoveAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.InstallationUpdate" /> activities with 'action' set to 'remove'.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
            method receives a installation update activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnInvokeActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt; OnInvokeActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.InvokeResponse&gt; OnInvokeActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInvokeActivityAsync (turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of InvokeResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnInvokeActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;&#xA;override this.OnInvokeActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;" Usage="application.OnInvokeActivityAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when an invoke activity is received from the connector when the base behavior of
            <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" /> is used.
            Invoke activities can be used to communicate many different things.
            By default, this method will call <see cref="M:Microsoft.Teams.AI.Application`2.OnSignInInvokeAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" /> if the
            activity's name is <c>signin/verifyState</c> or <c>signin/tokenExchange</c>.
            A <c>signin/verifyState</c> or <c>signin/tokenExchange</c> invoke can be triggered by an <see cref="T:Microsoft.Bot.Schema.OAuthCard" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
            method receives an invoke activity, it calls this method.
            If the event <see cref="P:Microsoft.Bot.Schema.IInvokeActivity.Name" /> is `signin/verifyState` or `signin/tokenExchange`, it calls
            <see cref="M:Microsoft.Teams.AI.Application`2.OnSignInInvokeAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
            Invoke activities communicate programmatic commands from a client or channel to a bot.
            The meaning of an invoke activity is defined by the <see cref="P:Microsoft.Bot.Schema.IInvokeActivity.Name" /> property,
            which is meaningful within the scope of a channel.
            A `signin/verifyState` or `signin/tokenExchange` invoke can be triggered by an <see cref="T:Microsoft.Bot.Schema.OAuthCard" /> or an OAuth prompt.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnMeetingEndAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMeetingEndAsync (Microsoft.Bot.Schema.Teams.MeetingEndEventDetails meeting, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMeetingEndAsync(class Microsoft.Bot.Schema.Teams.MeetingEndEventDetails meeting, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IEventActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMeetingEndAsync(Microsoft.Bot.Schema.Teams.MeetingEndEventDetails,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMeetingEndAsync (meeting As MeetingEndEventDetails, turnContext As ITurnContext(Of IEventActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMeetingEndAsync : Microsoft.Bot.Schema.Teams.MeetingEndEventDetails * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMeetingEndAsync : Microsoft.Bot.Schema.Teams.MeetingEndEventDetails * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMeetingEndAsync (meeting, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meeting" Type="Microsoft.Bot.Schema.Teams.MeetingEndEventDetails" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="meeting">The details of the meeting.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Teams Meeting End event activity is received from the connector.
            Override this in a derived class to provide logic for when a meeting is ended.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMeetingStartAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMeetingStartAsync (Microsoft.Bot.Schema.Teams.MeetingStartEventDetails meeting, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMeetingStartAsync(class Microsoft.Bot.Schema.Teams.MeetingStartEventDetails meeting, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IEventActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMeetingStartAsync(Microsoft.Bot.Schema.Teams.MeetingStartEventDetails,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMeetingStartAsync (meeting As MeetingStartEventDetails, turnContext As ITurnContext(Of IEventActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMeetingStartAsync : Microsoft.Bot.Schema.Teams.MeetingStartEventDetails * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMeetingStartAsync : Microsoft.Bot.Schema.Teams.MeetingStartEventDetails * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMeetingStartAsync (meeting, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meeting" Type="Microsoft.Bot.Schema.Teams.MeetingStartEventDetails" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="meeting">The details of the meeting.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Teams Meeting Start event activity is received from the connector.
            Override this in a derived class to provide logic for when a meeting is started.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMembersAddedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMembersAddedAsync (System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; membersAdded, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMembersAddedAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt; membersAdded, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMembersAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMembersAddedAsync (membersAdded As IList(Of ChannelAccount), turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMembersAddedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMembersAddedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMembersAddedAsync (membersAdded, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="membersAdded" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="membersAdded">A list of all the members added to the conversation, as
            described by the conversation update activity.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when members other than the bot
            join the conversation, such as your bot's welcome logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
            method receives a conversation update activity that indicates one or more users other than the bot
            are joining the conversation, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnMembersAddedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMembersAddedAsync (System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Teams.TeamsChannelAccount&gt; teamsMembersAdded, Microsoft.Bot.Schema.Teams.TeamInfo? teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMembersAddedAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.Teams.TeamsChannelAccount&gt; teamsMembersAdded, class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMembersAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.Teams.TeamsChannelAccount},Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMembersAddedAsync (teamsMembersAdded As IList(Of TeamsChannelAccount), teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMembersAddedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Teams.TeamsChannelAccount&gt; * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMembersAddedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Teams.TeamsChannelAccount&gt; * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMembersAddedAsync (teamsMembersAdded, teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="teamsMembersAdded" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Teams.TeamsChannelAccount&gt;" />
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="teamsMembersAdded">A list of all the members added to the channel, as
            described by the conversation update activity.</param>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when members other than the bot
            join the channel, such as your bot's welcome logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMembersAddedDispatchAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMembersAddedDispatchAsync (System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; membersAdded, Microsoft.Bot.Schema.Teams.TeamInfo? teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMembersAddedDispatchAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt; membersAdded, class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMembersAddedDispatchAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMembersAddedDispatchAsync (membersAdded As IList(Of ChannelAccount), teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMembersAddedDispatchAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMembersAddedDispatchAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMembersAddedDispatchAsync (membersAdded, teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="membersAdded" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;" />
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="membersAdded">A list of all the accounts added to the channel, as
            described by the conversation update activity.</param>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when members other than the bot
            join the channel, such as your bot's welcome logic.
            UseIt will get the associated members with the provided accounts.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMembersRemovedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMembersRemovedAsync (System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; membersRemoved, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMembersRemovedAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt; membersRemoved, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMembersRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMembersRemovedAsync (membersRemoved As IList(Of ChannelAccount), turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMembersRemovedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMembersRemovedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMembersRemovedAsync (membersRemoved, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="membersRemoved" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="membersRemoved">A list of all the members removed from the conversation, as
            described by the conversation update activity.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when members other than the bot
            leave the conversation, such as your bot's good-bye logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
            method receives a conversation update activity that indicates one or more users other than the bot
            are leaving the conversation, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnMembersRemovedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMembersRemovedAsync (System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Teams.TeamsChannelAccount&gt; teamsMembersRemoved, Microsoft.Bot.Schema.Teams.TeamInfo? teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMembersRemovedAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.Teams.TeamsChannelAccount&gt; teamsMembersRemoved, class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMembersRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.Teams.TeamsChannelAccount},Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMembersRemovedAsync (teamsMembersRemoved As IList(Of TeamsChannelAccount), teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMembersRemovedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Teams.TeamsChannelAccount&gt; * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMembersRemovedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Teams.TeamsChannelAccount&gt; * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMembersRemovedAsync (teamsMembersRemoved, teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="teamsMembersRemoved" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.Teams.TeamsChannelAccount&gt;" />
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="teamsMembersRemoved">A list of all the members removed from the channel, as
            described by the conversation update activity.</param>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when members other than the bot
            leave the channel, such as your bot's good-bye logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMembersRemovedDispatchAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMembersRemovedDispatchAsync (System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; membersRemoved, Microsoft.Bot.Schema.Teams.TeamInfo? teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMembersRemovedDispatchAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt; membersRemoved, class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMembersRemovedDispatchAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMembersRemovedDispatchAsync (membersRemoved As IList(Of ChannelAccount), teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMembersRemovedDispatchAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMembersRemovedDispatchAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMembersRemovedDispatchAsync (membersRemoved, teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="membersRemoved" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;" />
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="membersRemoved">A list of all the accounts removed from the channel, as
            described by the conversation update activity.</param>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when members other than the bot
            leave the channel, such as your bot's good-bye logic.
            It will get the associated members with the provided accounts.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMessageActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessageActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessageActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessageActivityAsync (turnContext As ITurnContext(Of IMessageActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessageActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessageActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMessageActivityAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.Message" /> activities, such as the conversational logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
            method receives a message activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnMessageDeleteActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMessageDeleteActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageDeleteActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessageDeleteActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageDeleteActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessageDeleteActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageDeleteActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessageDeleteActivityAsync (turnContext As ITurnContext(Of IMessageDeleteActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessageDeleteActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageDeleteActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessageDeleteActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageDeleteActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMessageDeleteActivityAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageDeleteActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.MessageDelete" /> activities, such as the conversational logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
            method receives a message delete activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnMessageEditAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMessageEditAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessageEditAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessageEditAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessageEditAsync (turnContext As ITurnContext(Of IMessageUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessageEditAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessageEditAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMessageEditAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a edit message event activity is received.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageReactionActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMessageReactionActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessageReactionActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageReactionActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessageReactionActivityAsync (turnContext As ITurnContext(Of IMessageReactionActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessageReactionActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessageReactionActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMessageReactionActivityAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when an event activity is received from the connector when the base behavior of
             <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" /> is used.
             Message reactions correspond to the user adding a 'like' or 'sad' etc. (often an emoji) to a
             previously sent activity. Message reactions are only supported by a few channels.
             The activity that the message reaction corresponds to is indicated in the replyToId property.
             The value of this property is the activity id of a previously sent activity given back to the
             bot as the response from a send call.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
             method receives a message reaction activity, it calls this method.
             If the message reaction indicates that reactions were added to a message, it calls
             <see cref="M:Microsoft.Teams.AI.Application`2.OnReactionsAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" />.
             If the message reaction indicates that reactions were removed from a message, it calls
             <see cref="M:Microsoft.Teams.AI.Application`2.OnReactionsRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" />.
            
             In a derived class, override this method to add logic that applies to all message reaction activities.
             Add logic to apply before the reactions added or removed logic before the call to the base class
             <see cref="M:Microsoft.Teams.AI.Application`2.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" /> method.
             Add logic to apply after the reactions added or removed logic after the call to the base class
             <see cref="M:Microsoft.Teams.AI.Application`2.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" /> method.
            
             </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnReactionsAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnReactionsRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnMessageSoftDeleteAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMessageSoftDeleteAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageDeleteActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessageSoftDeleteAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageDeleteActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessageSoftDeleteAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageDeleteActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessageSoftDeleteAsync (turnContext As ITurnContext(Of IMessageDeleteActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessageSoftDeleteAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageDeleteActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessageSoftDeleteAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageDeleteActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMessageSoftDeleteAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageDeleteActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a soft delete message event activity is received.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageUndeleteAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMessageUndeleteAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessageUndeleteAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessageUndeleteAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessageUndeleteAsync (turnContext As ITurnContext(Of IMessageUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessageUndeleteAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessageUndeleteAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMessageUndeleteAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a undo soft delete message event activity is received.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageUpdateActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMessageUpdateActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessageUpdateActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessageUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessageUpdateActivityAsync (turnContext As ITurnContext(Of IMessageUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessageUpdateActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessageUpdateActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMessageUpdateActivityAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.MessageUpdate" /> activities, such as the conversational logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
            method receives a message update activity, it calls this method.
            If it is a message edit event, it calls
            <see cref="M:Microsoft.Teams.AI.Application`2.OnMessageEditAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageUpdateActivity},`0,System.Threading.CancellationToken)" />.
            If it is a message undelete event, it calls
            <see cref="M:Microsoft.Teams.AI.Application`2.OnMessageUndeleteAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageUpdateActivity},`0,System.Threading.CancellationToken)" />.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnMessagingExtensionBotMessagePreviewEditAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt; OnMessagingExtensionBotMessagePreviewEditAsync (Microsoft.Bot.Schema.Teams.MessagingExtensionAction action, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt; OnMessagingExtensionBotMessagePreviewEditAsync(class Microsoft.Bot.Schema.Teams.MessagingExtensionAction action, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessagingExtensionBotMessagePreviewEditAsync(Microsoft.Bot.Schema.Teams.MessagingExtensionAction,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessagingExtensionBotMessagePreviewEditAsync (action As MessagingExtensionAction, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of MessagingExtensionActionResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnMessagingExtensionBotMessagePreviewEditAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionAction * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;&#xA;override this.OnMessagingExtensionBotMessagePreviewEditAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionAction * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;" Usage="application.OnMessagingExtensionBotMessagePreviewEditAsync (action, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Microsoft.Bot.Schema.Teams.MessagingExtensionAction" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action">The messaging extension action.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a messaging extension bot message preview edit activity is received from the connector.
            </summary>
        <returns>The Messaging Extension Action Response for the action.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessagingExtensionBotMessagePreviewSendAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt; OnMessagingExtensionBotMessagePreviewSendAsync (Microsoft.Bot.Schema.Teams.MessagingExtensionAction action, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt; OnMessagingExtensionBotMessagePreviewSendAsync(class Microsoft.Bot.Schema.Teams.MessagingExtensionAction action, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessagingExtensionBotMessagePreviewSendAsync(Microsoft.Bot.Schema.Teams.MessagingExtensionAction,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessagingExtensionBotMessagePreviewSendAsync (action As MessagingExtensionAction, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of MessagingExtensionActionResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnMessagingExtensionBotMessagePreviewSendAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionAction * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;&#xA;override this.OnMessagingExtensionBotMessagePreviewSendAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionAction * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;" Usage="application.OnMessagingExtensionBotMessagePreviewSendAsync (action, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Microsoft.Bot.Schema.Teams.MessagingExtensionAction" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action">The messaging extension action.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a messaging extension bot message preview send activity is received from the connector.
            </summary>
        <returns>The Messaging Extension Action Response for the action.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessagingExtensionCardButtonClickedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMessagingExtensionCardButtonClickedAsync (Newtonsoft.Json.Linq.JObject cardData, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessagingExtensionCardButtonClickedAsync(class Newtonsoft.Json.Linq.JObject cardData, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessagingExtensionCardButtonClickedAsync(Newtonsoft.Json.Linq.JObject,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessagingExtensionCardButtonClickedAsync (cardData As JObject, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessagingExtensionCardButtonClickedAsync : Newtonsoft.Json.Linq.JObject * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessagingExtensionCardButtonClickedAsync : Newtonsoft.Json.Linq.JObject * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMessagingExtensionCardButtonClickedAsync (cardData, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cardData" Type="Newtonsoft.Json.Linq.JObject" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cardData">Object representing the card data.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when a card button is clicked in a messaging extension.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessagingExtensionConfigurationQuerySettingUrlAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt; OnMessagingExtensionConfigurationQuerySettingUrlAsync (Microsoft.Bot.Schema.Teams.MessagingExtensionQuery query, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt; OnMessagingExtensionConfigurationQuerySettingUrlAsync(class Microsoft.Bot.Schema.Teams.MessagingExtensionQuery query, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessagingExtensionConfigurationQuerySettingUrlAsync(Microsoft.Bot.Schema.Teams.MessagingExtensionQuery,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessagingExtensionConfigurationQuerySettingUrlAsync (query As MessagingExtensionQuery, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of MessagingExtensionResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnMessagingExtensionConfigurationQuerySettingUrlAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionQuery * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;&#xA;override this.OnMessagingExtensionConfigurationQuerySettingUrlAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionQuery * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;" Usage="application.OnMessagingExtensionConfigurationQuerySettingUrlAsync (query, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="Microsoft.Bot.Schema.Teams.MessagingExtensionQuery" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The Messaging extension query.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a messaging extension configuration query setting url activity is received from the connector.
            </summary>
        <returns>The Messaging Extension Response for the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessagingExtensionConfigurationSettingAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMessagingExtensionConfigurationSettingAsync (Newtonsoft.Json.Linq.JObject settings, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessagingExtensionConfigurationSettingAsync(class Newtonsoft.Json.Linq.JObject settings, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessagingExtensionConfigurationSettingAsync(Newtonsoft.Json.Linq.JObject,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessagingExtensionConfigurationSettingAsync (settings As JObject, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessagingExtensionConfigurationSettingAsync : Newtonsoft.Json.Linq.JObject * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessagingExtensionConfigurationSettingAsync : Newtonsoft.Json.Linq.JObject * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnMessagingExtensionConfigurationSettingAsync (settings, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Newtonsoft.Json.Linq.JObject" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="settings">Object representing the configuration settings.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when a configuration is set for a messaging extension.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessagingExtensionFetchTaskAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt; OnMessagingExtensionFetchTaskAsync (Microsoft.Bot.Schema.Teams.MessagingExtensionAction action, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt; OnMessagingExtensionFetchTaskAsync(class Microsoft.Bot.Schema.Teams.MessagingExtensionAction action, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessagingExtensionFetchTaskAsync(Microsoft.Bot.Schema.Teams.MessagingExtensionAction,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessagingExtensionFetchTaskAsync (action As MessagingExtensionAction, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of MessagingExtensionActionResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnMessagingExtensionFetchTaskAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionAction * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;&#xA;override this.OnMessagingExtensionFetchTaskAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionAction * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;" Usage="application.OnMessagingExtensionFetchTaskAsync (action, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Microsoft.Bot.Schema.Teams.MessagingExtensionAction" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action">The messaging extension action.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Messaging Extension Fetch activity is received from the connector.
            </summary>
        <returns>The Messaging Extension Action Response for the action.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessagingExtensionQueryAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt; OnMessagingExtensionQueryAsync (Microsoft.Bot.Schema.Teams.MessagingExtensionQuery query, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt; OnMessagingExtensionQueryAsync(class Microsoft.Bot.Schema.Teams.MessagingExtensionQuery query, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessagingExtensionQueryAsync(Microsoft.Bot.Schema.Teams.MessagingExtensionQuery,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessagingExtensionQueryAsync (query As MessagingExtensionQuery, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of MessagingExtensionResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnMessagingExtensionQueryAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionQuery * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;&#xA;override this.OnMessagingExtensionQueryAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionQuery * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;" Usage="application.OnMessagingExtensionQueryAsync (query, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="Microsoft.Bot.Schema.Teams.MessagingExtensionQuery" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The query for the search command.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Messaging Extension Query activity is received from the connector.
            </summary>
        <returns>The Messaging Extension Response for the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessagingExtensionSelectItemAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt; OnMessagingExtensionSelectItemAsync (Newtonsoft.Json.Linq.JObject query, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt; OnMessagingExtensionSelectItemAsync(class Newtonsoft.Json.Linq.JObject query, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessagingExtensionSelectItemAsync(Newtonsoft.Json.Linq.JObject,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessagingExtensionSelectItemAsync (query As JObject, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of MessagingExtensionResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnMessagingExtensionSelectItemAsync : Newtonsoft.Json.Linq.JObject * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;&#xA;override this.OnMessagingExtensionSelectItemAsync : Newtonsoft.Json.Linq.JObject * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;" Usage="application.OnMessagingExtensionSelectItemAsync (query, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="Newtonsoft.Json.Linq.JObject" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The object representing the query.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a messaging extension select item activity is received from the connector.
            </summary>
        <returns>The Messaging Extension Response for the query.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessagingExtensionSubmitActionAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt; OnMessagingExtensionSubmitActionAsync (Microsoft.Bot.Schema.Teams.MessagingExtensionAction action, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt; OnMessagingExtensionSubmitActionAsync(class Microsoft.Bot.Schema.Teams.MessagingExtensionAction action, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessagingExtensionSubmitActionAsync(Microsoft.Bot.Schema.Teams.MessagingExtensionAction,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessagingExtensionSubmitActionAsync (action As MessagingExtensionAction, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of MessagingExtensionActionResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnMessagingExtensionSubmitActionAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionAction * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;&#xA;override this.OnMessagingExtensionSubmitActionAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionAction * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;" Usage="application.OnMessagingExtensionSubmitActionAsync (action, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Microsoft.Bot.Schema.Teams.MessagingExtensionAction" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action">The messaging extension action.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a messaging extension submit action activity is received from the connector.
            </summary>
        <returns>The Messaging Extension Action Response for the action.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessagingExtensionSubmitActionDispatchAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt; OnMessagingExtensionSubmitActionDispatchAsync (Microsoft.Bot.Schema.Teams.MessagingExtensionAction action, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt; OnMessagingExtensionSubmitActionDispatchAsync(class Microsoft.Bot.Schema.Teams.MessagingExtensionAction action, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnMessagingExtensionSubmitActionDispatchAsync(Microsoft.Bot.Schema.Teams.MessagingExtensionAction,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessagingExtensionSubmitActionDispatchAsync (action As MessagingExtensionAction, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of MessagingExtensionActionResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnMessagingExtensionSubmitActionDispatchAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionAction * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;&#xA;override this.OnMessagingExtensionSubmitActionDispatchAsync : Microsoft.Bot.Schema.Teams.MessagingExtensionAction * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;" Usage="application.OnMessagingExtensionSubmitActionDispatchAsync (action, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.MessagingExtensionActionResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Microsoft.Bot.Schema.Teams.MessagingExtensionAction" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="action">The messaging extension action.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a messaging extension submit action dispatch activity is received from the connector.
            </summary>
        <returns>The Messaging Extension Action Response for the action.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnO365ConnectorCardActionAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnO365ConnectorCardActionAsync (Microsoft.Bot.Schema.Teams.O365ConnectorCardActionQuery query, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnO365ConnectorCardActionAsync(class Microsoft.Bot.Schema.Teams.O365ConnectorCardActionQuery query, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnO365ConnectorCardActionAsync(Microsoft.Bot.Schema.Teams.O365ConnectorCardActionQuery,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnO365ConnectorCardActionAsync (query As O365ConnectorCardActionQuery, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnO365ConnectorCardActionAsync : Microsoft.Bot.Schema.Teams.O365ConnectorCardActionQuery * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnO365ConnectorCardActionAsync : Microsoft.Bot.Schema.Teams.O365ConnectorCardActionQuery * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnO365ConnectorCardActionAsync (query, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="Microsoft.Bot.Schema.Teams.O365ConnectorCardActionQuery" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The O365 connector card HttpPOST invoke query.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a O365 Connector Card Action activity is received from the connector.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReactionsAddedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnReactionsAddedAsync (System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; messageReactions, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnReactionsAddedAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.MessageReaction&gt; messageReactions, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageReactionActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnReactionsAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnReactionsAddedAsync (messageReactions As IList(Of MessageReaction), turnContext As ITurnContext(Of IMessageReactionActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnReactionsAddedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnReactionsAddedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnReactionsAddedAsync (messageReactions, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageReactions" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt;" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageReactions">The list of reactions added.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when reactions to a previous activity
            are added to the conversation.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            Message reactions correspond to the user adding a 'like' or 'sad' etc. (often an emoji) to a
            previously sent message on the conversation. Message reactions are supported by only a few channels.
            The activity that the message is in reaction to is identified by the activity's
            <see cref="P:Microsoft.Bot.Schema.Activity.ReplyToId" /> property. The value of this property is the activity ID
            of a previously sent activity. When the bot sends an activity, the channel assigns an ID to it,
            which is available in the <see cref="P:Microsoft.Bot.Schema.ResourceResponse.Id" /> of the result.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="P:Microsoft.Bot.Schema.Activity.Id" />
        <altmember cref="M:Microsoft.Bot.Builder.ITurnContext.SendActivityAsync(Microsoft.Bot.Schema.IActivity,System.Threading.CancellationToken)" />
        <altmember cref="P:Microsoft.Bot.Schema.ResourceResponse.Id" />
      </Docs>
    </Member>
    <Member MemberName="OnReactionsRemovedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnReactionsRemovedAsync (System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; messageReactions, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnReactionsRemovedAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.MessageReaction&gt; messageReactions, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageReactionActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnReactionsRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnReactionsRemovedAsync (messageReactions As IList(Of MessageReaction), turnContext As ITurnContext(Of IMessageReactionActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnReactionsRemovedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnReactionsRemovedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnReactionsRemovedAsync (messageReactions, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageReactions" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt;" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageReactions">The list of reactions removed.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when reactions to a previous activity
            are removed from the conversation.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            Message reactions correspond to the user adding a 'like' or 'sad' etc. (often an emoji) to a
            previously sent message on the conversation. Message reactions are supported by only a few channels.
            The activity that the message is in reaction to is identified by the activity's
            <see cref="P:Microsoft.Bot.Schema.Activity.ReplyToId" /> property. The value of this property is the activity ID
            of a previously sent activity. When the bot sends an activity, the channel assigns an ID to it,
            which is available in the <see cref="P:Microsoft.Bot.Schema.ResourceResponse.Id" /> of the result.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="P:Microsoft.Bot.Schema.Activity.Id" />
        <altmember cref="M:Microsoft.Bot.Builder.ITurnContext.SendActivityAsync(Microsoft.Bot.Schema.IActivity,System.Threading.CancellationToken)" />
        <altmember cref="P:Microsoft.Bot.Schema.ResourceResponse.Id" />
      </Docs>
    </Member>
    <Member MemberName="OnReadReceiptAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnReadReceiptAsync (Microsoft.Bot.Schema.Teams.ReadReceiptInfo readReceiptInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnReadReceiptAsync(class Microsoft.Bot.Schema.Teams.ReadReceiptInfo readReceiptInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IEventActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnReadReceiptAsync(Microsoft.Bot.Schema.Teams.ReadReceiptInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnReadReceiptAsync (readReceiptInfo As ReadReceiptInfo, turnContext As ITurnContext(Of IEventActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnReadReceiptAsync : Microsoft.Bot.Schema.Teams.ReadReceiptInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnReadReceiptAsync : Microsoft.Bot.Schema.Teams.ReadReceiptInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnReadReceiptAsync (readReceiptInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readReceiptInfo" Type="Microsoft.Bot.Schema.Teams.ReadReceiptInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="readReceiptInfo">Information regarding the read receipt. i.e. Id of the message last read by the user.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a read receipt for a previously sent message is received from the connector.
            Override this in a derived class to provide logic for when the bot receives a read receipt event.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSearchInvokeAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.SearchInvokeResponse&gt; OnSearchInvokeAsync (Microsoft.Bot.Schema.SearchInvokeValue invokeValue, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.SearchInvokeResponse&gt; OnSearchInvokeAsync(class Microsoft.Bot.Schema.SearchInvokeValue invokeValue, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnSearchInvokeAsync(Microsoft.Bot.Schema.SearchInvokeValue,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSearchInvokeAsync (invokeValue As SearchInvokeValue, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of SearchInvokeResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnSearchInvokeAsync : Microsoft.Bot.Schema.SearchInvokeValue * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.SearchInvokeResponse&gt;&#xA;override this.OnSearchInvokeAsync : Microsoft.Bot.Schema.SearchInvokeValue * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.SearchInvokeResponse&gt;" Usage="application.OnSearchInvokeAsync (invokeValue, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.SearchInvokeResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeValue" Type="Microsoft.Bot.Schema.SearchInvokeValue" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="invokeValue">A strongly-typed object from the incoming activity's Value.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when the bot is sent an 'invoke' activity having name of 'application/search'.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
            method receives an Invoke with a <see cref="P:Microsoft.Bot.Schema.IInvokeActivity.Name" /> of `application/search`,
            it calls this method. The Activity.Value must be a well formed <see cref="T:Microsoft.Bot.Schema.SearchInvokeValue" />.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInInvokeAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnSignInInvokeAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnSignInInvokeAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnSignInInvokeAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSignInInvokeAsync (turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnSignInInvokeAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnSignInInvokeAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnSignInInvokeAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when a <c>signin/verifyState</c> or <c>signin/tokenExchange</c> event is received when the base behavior of
             <see cref="M:Microsoft.Teams.AI.Application`2.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" /> is used.
             If using an <c>OAuthPrompt</c>, override this method to forward this <see cref="T:Microsoft.Bot.Schema.Activity" /> to the current dialog.
             By default, this method does nothing.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Teams.AI.Application`2.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
             method receives an Invoke with a <see cref="P:Microsoft.Bot.Schema.IInvokeActivity.Name" /> of `tokens/response`,
             it calls this method.
            
             If your bot uses the <c>OAuthPrompt</c>, forward the incoming <see cref="T:Microsoft.Bot.Schema.Activity" /> to
             the current dialog.
             </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInTokenExchangeAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnSignInTokenExchangeAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnSignInTokenExchangeAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnSignInTokenExchangeAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSignInTokenExchangeAsync (turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnSignInTokenExchangeAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnSignInTokenExchangeAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnSignInTokenExchangeAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a signIn token exchange activity is received from the connector.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignInVerifyStateAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnSignInVerifyStateAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnSignInVerifyStateAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnSignInVerifyStateAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSignInVerifyStateAsync (turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnSignInVerifyStateAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnSignInVerifyStateAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnSignInVerifyStateAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a signIn verify state activity is received from the connector.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTabFetchAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TabResponse&gt; OnTabFetchAsync (Microsoft.Bot.Schema.Teams.TabRequest tabRequest, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.TabResponse&gt; OnTabFetchAsync(class Microsoft.Bot.Schema.Teams.TabRequest tabRequest, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTabFetchAsync(Microsoft.Bot.Schema.Teams.TabRequest,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTabFetchAsync (tabRequest As TabRequest, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of TabResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnTabFetchAsync : Microsoft.Bot.Schema.Teams.TabRequest * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TabResponse&gt;&#xA;override this.OnTabFetchAsync : Microsoft.Bot.Schema.Teams.TabRequest * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TabResponse&gt;" Usage="application.OnTabFetchAsync (tabRequest, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TabResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tabRequest" Type="Microsoft.Bot.Schema.Teams.TabRequest" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tabRequest">The tab invoke request value payload.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when a tab is fetched.
            </summary>
        <returns>A Tab Response for the request.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTabSubmitAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TabResponse&gt; OnTabSubmitAsync (Microsoft.Bot.Schema.Teams.TabSubmit tabSubmit, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.TabResponse&gt; OnTabSubmitAsync(class Microsoft.Bot.Schema.Teams.TabSubmit tabSubmit, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTabSubmitAsync(Microsoft.Bot.Schema.Teams.TabSubmit,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTabSubmitAsync (tabSubmit As TabSubmit, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of TabResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnTabSubmitAsync : Microsoft.Bot.Schema.Teams.TabSubmit * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TabResponse&gt;&#xA;override this.OnTabSubmitAsync : Microsoft.Bot.Schema.Teams.TabSubmit * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TabResponse&gt;" Usage="application.OnTabSubmitAsync (tabSubmit, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TabResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tabSubmit" Type="Microsoft.Bot.Schema.Teams.TabSubmit" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tabSubmit">The tab submit invoke request value payload.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when a tab is submitted.
            </summary>
        <returns>A Tab Response for the request.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTaskModuleFetchAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TaskModuleResponse&gt; OnTaskModuleFetchAsync (Microsoft.Bot.Schema.Teams.TaskModuleRequest taskModuleRequest, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.TaskModuleResponse&gt; OnTaskModuleFetchAsync(class Microsoft.Bot.Schema.Teams.TaskModuleRequest taskModuleRequest, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTaskModuleFetchAsync(Microsoft.Bot.Schema.Teams.TaskModuleRequest,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTaskModuleFetchAsync (taskModuleRequest As TaskModuleRequest, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of TaskModuleResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnTaskModuleFetchAsync : Microsoft.Bot.Schema.Teams.TaskModuleRequest * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TaskModuleResponse&gt;&#xA;override this.OnTaskModuleFetchAsync : Microsoft.Bot.Schema.Teams.TaskModuleRequest * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TaskModuleResponse&gt;" Usage="application.OnTaskModuleFetchAsync (taskModuleRequest, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TaskModuleResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskModuleRequest" Type="Microsoft.Bot.Schema.Teams.TaskModuleRequest" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="taskModuleRequest">The task module invoke request value payload.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when a task module is fetched.
            </summary>
        <returns>A Task Module Response for the request.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTaskModuleSubmitAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TaskModuleResponse&gt; OnTaskModuleSubmitAsync (Microsoft.Bot.Schema.Teams.TaskModuleRequest taskModuleRequest, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.Teams.TaskModuleResponse&gt; OnTaskModuleSubmitAsync(class Microsoft.Bot.Schema.Teams.TaskModuleRequest taskModuleRequest, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTaskModuleSubmitAsync(Microsoft.Bot.Schema.Teams.TaskModuleRequest,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTaskModuleSubmitAsync (taskModuleRequest As TaskModuleRequest, turnContext As ITurnContext(Of IInvokeActivity), turnState As TState, cancellationToken As CancellationToken) As Task(Of TaskModuleResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnTaskModuleSubmitAsync : Microsoft.Bot.Schema.Teams.TaskModuleRequest * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TaskModuleResponse&gt;&#xA;override this.OnTaskModuleSubmitAsync : Microsoft.Bot.Schema.Teams.TaskModuleRequest * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TaskModuleResponse&gt;" Usage="application.OnTaskModuleSubmitAsync (taskModuleRequest, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.Teams.TaskModuleResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskModuleRequest" Type="Microsoft.Bot.Schema.Teams.TaskModuleRequest" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="taskModuleRequest">The task module invoke request value payload.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when a task module is submited.
            </summary>
        <returns>A Task Module Response for the request.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTeamArchivedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnTeamArchivedAsync (Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnTeamArchivedAsync(class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTeamArchivedAsync(Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTeamArchivedAsync (teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTeamArchivedAsync : Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTeamArchivedAsync : Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnTeamArchivedAsync (teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Team Archived event activity is received from the connector.
            Team Archived correspond to the user archiving a team.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTeamDeletedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnTeamDeletedAsync (Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnTeamDeletedAsync(class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTeamDeletedAsync(Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTeamDeletedAsync (teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTeamDeletedAsync : Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTeamDeletedAsync : Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnTeamDeletedAsync (teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Team Deleted event activity is received from the connector.
            Team Deleted corresponds to the user deleting a team.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTeamHardDeletedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnTeamHardDeletedAsync (Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnTeamHardDeletedAsync(class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTeamHardDeletedAsync(Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTeamHardDeletedAsync (teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTeamHardDeletedAsync : Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTeamHardDeletedAsync : Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnTeamHardDeletedAsync (teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Team Hard Deleted event activity is received from the connector.
            Team Hard Deleted corresponds to the user hard deleting a team.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTeamRenamedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnTeamRenamedAsync (Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnTeamRenamedAsync(class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTeamRenamedAsync(Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTeamRenamedAsync (teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTeamRenamedAsync : Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTeamRenamedAsync : Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnTeamRenamedAsync (teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Team Renamed event activity is received from the connector.
            Team Renamed correspond to the user renaming an existing team.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTeamRestoredAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnTeamRestoredAsync (Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnTeamRestoredAsync(class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTeamRestoredAsync(Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTeamRestoredAsync (teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTeamRestoredAsync : Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTeamRestoredAsync : Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnTeamRestoredAsync (teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Team Restored event activity is received from the connector.
            Team Restored corresponds to the user restoring a team.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTeamUnarchivedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnTeamUnarchivedAsync (Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnTeamUnarchivedAsync(class Microsoft.Bot.Schema.Teams.TeamInfo teamInfo, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTeamUnarchivedAsync(Microsoft.Bot.Schema.Teams.TeamInfo,Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTeamUnarchivedAsync (teamInfo As TeamInfo, turnContext As ITurnContext(Of IConversationUpdateActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTeamUnarchivedAsync : Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTeamUnarchivedAsync : Microsoft.Bot.Schema.Teams.TeamInfo * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnTeamUnarchivedAsync (teamInfo, turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="teamInfo" Type="Microsoft.Bot.Schema.Teams.TeamInfo" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="teamInfo">The team info object representing the team.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when a Team Unarchived event activity is received from the connector.
            Team Unarchived correspond to the user unarchiving a team.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTokenResponseEventAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnTokenResponseEventAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnTokenResponseEventAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IEventActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTokenResponseEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTokenResponseEventAsync (turnContext As ITurnContext(Of IEventActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTokenResponseEventAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTokenResponseEventAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnTokenResponseEventAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when a <c>tokens/response</c> event is received when the base behavior of
             <see cref="M:Microsoft.Teams.AI.Application`2.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" /> is used.
             If using an <c>OAuthPrompt</c>, override this method to forward this <see cref="T:Microsoft.Bot.Schema.Activity" /> to the current dialog.
             By default, this method does nothing.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Teams.AI.Application`2.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
             method receives an event with a <see cref="P:Microsoft.Bot.Schema.IEventActivity.Name" /> of `tokens/response`,
             it calls this method.
            
             If your bot uses the <c>OAuthPrompt</c>, forward the incoming <see cref="T:Microsoft.Bot.Schema.Activity" /> to
             the current dialog.
             </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnTurnAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OnTurnAsync (Microsoft.Bot.Builder.ITurnContext turnContext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnTurnAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnTurnAsync (turnContext As ITurnContext, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTurnAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTurnAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnTurnAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IBot.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Called by the adapter (for example, a <see cref="T:Microsoft.Bot.Builder.Integration.AspNet.Core.CloudAdapter" />)
            at runtime in order to process an inbound <see cref="T:Microsoft.Bot.Schema.Activity" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            This method calls other methods in this class based on the type of the activity to
            process, which allows a derived class to provide type-specific logic in a controlled way.
            <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" /> is responsible for
            routing the activity to the appropriate type-specific handler.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnMessageActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageActivity},`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnTypingActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnTypingActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ITypingActivity&gt; turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnTypingActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.ITypingActivity&gt; turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnTypingActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ITypingActivity},`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTypingActivityAsync (turnContext As ITurnContext(Of ITypingActivity), turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTypingActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ITypingActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTypingActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ITypingActivity&gt; * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnTypingActivityAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ITypingActivity&gt;" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.Typing" /> activities, such as the conversational logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
            method receives a message activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnUnrecognizedActivityTypeAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnUnrecognizedActivityTypeAsync (Microsoft.Bot.Builder.ITurnContext turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnUnrecognizedActivityTypeAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.OnUnrecognizedActivityTypeAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnUnrecognizedActivityTypeAsync (turnContext As ITurnContext, turnState As TState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnUnrecognizedActivityTypeAsync : Microsoft.Bot.Builder.ITurnContext * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnUnrecognizedActivityTypeAsync : Microsoft.Bot.Builder.ITurnContext * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnUnrecognizedActivityTypeAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when an activity other than a message, conversation update, or event is received when the base behavior of
            <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" /> is used.
            If overridden, this could potentially respond to any of the other activity types like
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.ContactRelationUpdate" /> or <see cref="F:Microsoft.Bot.Schema.ActivityTypes.EndOfConversation" />.
            By default, this method does nothing.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
            method receives an activity that is not a message, conversation update, message reaction,
            or event activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnMessageActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="P:Microsoft.Bot.Schema.Activity.Type" />
        <altmember cref="T:Microsoft.Bot.Schema.ActivityTypes" />
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.ApplicationOptions&lt;TState,TTurnStateManager&gt; Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.ApplicationOptions`2&lt;!TState, !TTurnStateManager&gt; Options" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.Application`2.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As ApplicationOptions(Of TState, TTurnStateManager)" />
      <MemberSignature Language="F#" Value="member this.Options : Microsoft.Teams.AI.ApplicationOptions&lt;'State, 'urnStateManager (requires 'State :&gt; Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.TempState&gt; and 'urnStateManager :&gt; Microsoft.Teams.AI.State.ITurnStateManager&lt;'State&gt; and 'urnStateManager : (new : unit -&gt; 'urnStateManager))&gt;" Usage="Microsoft.Teams.AI.Application&lt;'State, 'urnStateManager (requires 'State :&gt; Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.TempState&gt; and 'urnStateManager :&gt; Microsoft.Teams.AI.State.ITurnStateManager&lt;'State&gt; and 'urnStateManager : (new : unit -&gt; 'urnStateManager))&gt;.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.ApplicationOptions&lt;TState,TTurnStateManager&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The application's configured options.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunActivityHandlerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; RunActivityHandlerAsync (Microsoft.Bot.Builder.ITurnContext turnContext, TState turnState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; RunActivityHandlerAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, !TState turnState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.RunActivityHandlerAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function RunActivityHandlerAsync (turnContext As ITurnContext, turnState As TState, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.RunActivityHandlerAsync : Microsoft.Bot.Builder.ITurnContext * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="application.RunActivityHandlerAsync (turnContext, turnState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="turnState">The turn state object that stores arbitrary data for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Called by the <see cref="M:Microsoft.Teams.AI.Application`2.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
             at runtime in order to dispatch the appropriate handler method.
             </summary>
        <returns>True if and only if the executed handler method was implemented. That is, the handler method does not
             throw a <see cref="T:System.NotImplementedException" />.</returns>
        <remarks>
             This method calls other methods in this class based on the type of the activity to
             process, which allows a derived class to provide type-specific logic in a controlled way.
            
             In a derived class, override this method to add logic that applies to all activity types.
             To add logic to apply before the type-specific logic override the
             <see cref="M:Microsoft.Teams.AI.Application`2.OnBeforeTurnAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" /> method.
              To add logic to apply after the type-specific logic override the
             <see cref="M:Microsoft.Teams.AI.Application`2.OnAfterTurnAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" /> method.
             </remarks>
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnMessageActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnMessageUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageUpdateActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnMessageDeleteActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageDeleteActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},`0,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Teams.AI.Application`2.OnUnrecognizedActivityTypeAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
        <altmember cref="P:Microsoft.Bot.Schema.Activity.Type" />
        <altmember cref="T:Microsoft.Bot.Schema.ActivityTypes" />
      </Docs>
    </Member>
    <Member MemberName="StartTypingTimer">
      <MemberSignature Language="C#" Value="public void StartTypingTimer (Microsoft.Bot.Builder.ITurnContext turnContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartTypingTimer(class Microsoft.Bot.Builder.ITurnContext turnContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.StartTypingTimer(Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartTypingTimer (turnContext As ITurnContext)" />
      <MemberSignature Language="F#" Value="member this.StartTypingTimer : Microsoft.Bot.Builder.ITurnContext -&gt; unit" Usage="application.StartTypingTimer turnContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="turnContext">The turn context.</param>
        <summary>
            Manually start a timer to periodically send "typing" activities.
            </summary>
        <remarks>
            The timer waits 1000ms to send its initial "typing" activity and then send an additional
            "typing" activity every 1000ms.The timer will automatically end once an outgoing activity
            has been sent. If the timer is already running or the current activity is not a "message"
            the call is ignored.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopTypingTimer">
      <MemberSignature Language="C#" Value="public void StopTypingTimer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopTypingTimer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`2.StopTypingTimer" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopTypingTimer ()" />
      <MemberSignature Language="F#" Value="member this.StopTypingTimer : unit -&gt; unit" Usage="application.StopTypingTimer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Manually stop the typing timer.
            </summary>
        <remarks>
            If the timer isn't running nothing happens.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
