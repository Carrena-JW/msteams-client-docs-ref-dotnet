<Type Name="ITurnStateManager&lt;TState&gt;" FullName="Microsoft.Teams.AI.State.ITurnStateManager&lt;TState&gt;">
  <TypeSignature Language="C#" Value="public interface ITurnStateManager&lt;TState&gt; where TState : ITurnState&lt;StateBase,StateBase,TempState&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITurnStateManager`1&lt;(class Microsoft.Teams.AI.State.ITurnState`3&lt;class Microsoft.Teams.AI.State.StateBase, class Microsoft.Teams.AI.State.StateBase, class Microsoft.Teams.AI.State.TempState&gt;) TState&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.State.ITurnStateManager`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITurnStateManager(Of TState)" />
  <TypeSignature Language="F#" Value="type ITurnStateManager&lt;'State (requires 'State :&gt; ITurnState&lt;StateBase, StateBase, TempState&gt;)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState">
      <Constraints>
        <InterfaceName>Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.StateBase,Microsoft.Teams.AI.State.TempState&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TState">Type of the state object being persisted.</typeparam>
    <summary>
            Interface implemented by classes responsible for loading and saving an applications turn state.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="LoadStateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TState&gt; LoadStateAsync (Microsoft.Bot.Builder.IStorage? storage, Microsoft.Bot.Builder.ITurnContext turnContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!TState&gt; LoadStateAsync(class Microsoft.Bot.Builder.IStorage storage, class Microsoft.Bot.Builder.ITurnContext turnContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.State.ITurnStateManager`1.LoadStateAsync(Microsoft.Bot.Builder.IStorage,Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadStateAsync (storage As IStorage, turnContext As ITurnContext) As Task(Of TState)" />
      <MemberSignature Language="F#" Value="abstract member LoadStateAsync : Microsoft.Bot.Builder.IStorage * Microsoft.Bot.Builder.ITurnContext -&gt; System.Threading.Tasks.Task&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.ITurnState&lt;Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.StateBase, Microsoft.Teams.AI.State.TempState&gt;)&gt;" Usage="iTurnStateManager.LoadStateAsync (storage, turnContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storage" Type="Microsoft.Bot.Builder.IStorage" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="storage">Storage provider to load state scopes from.</param>
        <param name="turnContext">Context for the current turn of conversation with the user.</param>
        <summary>
            Loads all of the state scopes for the current turn.
            </summary>
        <returns>The loaded state scopes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveStateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SaveStateAsync (Microsoft.Bot.Builder.IStorage? storage, Microsoft.Bot.Builder.ITurnContext turnContext, TState turnState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveStateAsync(class Microsoft.Bot.Builder.IStorage storage, class Microsoft.Bot.Builder.ITurnContext turnContext, !TState turnState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.State.ITurnStateManager`1.SaveStateAsync(Microsoft.Bot.Builder.IStorage,Microsoft.Bot.Builder.ITurnContext,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveStateAsync (storage As IStorage, turnContext As ITurnContext, turnState As TState) As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveStateAsync : Microsoft.Bot.Builder.IStorage * Microsoft.Bot.Builder.ITurnContext * 'State -&gt; System.Threading.Tasks.Task" Usage="iTurnStateManager.SaveStateAsync (storage, turnContext, turnState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storage" Type="Microsoft.Bot.Builder.IStorage" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="turnState" Type="TState" />
      </Parameters>
      <Docs>
        <param name="storage">Storage provider to save state scopes to.</param>
        <param name="turnContext">Context for the current turn of conversation with the user.</param>
        <param name="turnState">State scopes to save.</param>
        <summary>
            Saves all of the state scopes for the current turn.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
